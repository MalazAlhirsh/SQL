/*#1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").*/

SELECT CustomerId,FirstName, LastName, Country
FROM chinook.customers
WHERE NOT Country = 'USA'; 

/*#2. Show only the Customers from Brazil.*/

SELECT CustomerId, FirstName, LastName, Country
FROM chinook.customers
WHERE Country = 'Brazil';

/*#3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice,
and billing country.*/

SELECT cust.FirstName, cust.LastName, inv.InvoiceId, inv.InvoiceDATe, inv.BillingCountry
FROM chinook.customers cust
INNER JOIN chinook.invoices inv
ON cust.CustomerId = inv.CustomerId
WHERE inv.BillingCountry = 'Brazil';
/*OR */
SELECT cust.FirstName, cust.LastName, inv.InvoiceId, inv.BillingCountry, inv.InvoiceDate
FROM chinook.invoices as inv 
LEFT JOIN chinook.customers as cust 
on inv.CustomerId = cust.CustomerId 
WHERE inv.BillingCountry = "Brazil";

/*#4.Show the Employees who are Sales Agents. */

SELECT *
FROM chinook.employees
WHERE Title LIKE '%Sales%';

/*#5.Find a unique/distinct list of billing countries from the Invoice table */
SELECT DISTINCT BillingCountry
FROM chinook.invoices;

/*#6.Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name. */

SELECT emp.LastName, emp.FirstName, inv.InvoiceId
FROM chinook.employees emp
JOIN chinook.customers cust 
ON emp.EmployeeId = cust.SupportRepId
JOIN chinook.invoices inv
ON inv.CustomerId = cust.CustomerId; 

/*#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.*/

SELECT emp.LastName, emp.FirstName, cust.FirstName, cust.LastName, cust.Country, inv.Total 
FROM chinook.employees emp
JOIN chinook.customers cust 
ON emp.EmployeeId = cust.SupportRepId
JOIN chinook.invoices inv
ON inv.CustomerId = cust.CustomerId; 

/*#8. How many Invoices were there in 2009?*/

SELECT COUNT(*)
FROM chinook.invoices
WHERE InvoiceDate LIKE '%2009%'
/*OR*/
SELECT COUNT(*)
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

/*#9. What are the total sales for 2009? */

SELECT Sum(Total)
FROM chinook.invoices
WHERE InvoiceDate BETWEEN '2009-01-01' and '2009-12-31';

/*#10. Write a query that includes the purchased track name with each invoice line item.*/

SELECT Tr.TrackID, Tr.Name, invi.InvoiceLineId
FROM chinook.tracks Tr
LEFT OUTER JOIN chinook.invoice_items invi
ON Tr.TrackID = invi.TrackId; 
/* OR*/
SELECT t.Name, i.InvoiceLineId
FROM chinook.Invoice_items i
JOIN chinook.Tracks t ON i.TrackId = t.TrackId;

/*#11.Write a query that includes the purchased track name AND artist name with each invoice line item. */

SELECT t.Name, t.Composer, i.InvoiceLineId
FROM chinook.Invoice_items i 
JOIN chinook.Tracks t ON i.TrackId = t.TrackId;

/*#12.Query that shows all the Tracks, and include the Album name, Media type, and Genre/ Change names*/

SELECT A.Title AS 'Album_Title', Trk.Name AS 'Track_Name', Trk.Composer, G.Name AS'Genre_Name', mt.Name AS'Media_Name'
FROM chinook.tracks Trk
JOIN chinook.albums A 
ON A.AlbumId = Trk.AlbumId 
JOIN chinook.media_types mt
ON Trk.MediaTypeId = mt.MediaTypeId
JOIN chinook.genres G
ON Trk.GenreID = g.GenreId;
 
/*#13.Show the total sales made by each sales agent.*/

SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
GROUP BY emp.FirstName;


/*#14.Which sales agent made the most in sales in 2009?*/

SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY Inv.Total DESC LIMIT 1;
